<!-- Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script src="https://cdn.plot.ly/plotly-3.0.1.min.js" charset="utf-8"></script>
<style>
  .pinput-tab-container {
    max-width: 800px;
    margin: auto;
    padding: 20px;
    background-color: #36393f;
    color: white;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  }

  .btn-modern {
    min-width: 180px;
    margin: 6px;
  }

  .tooltip-container {
    position: relative;
    display: inline-block;
  }

  .tooltip-container .tooltiptext {
    visibility: hidden;
    width: 200px;
    background-color: #222;
    color: #fff;
    text-align: center;
    border-radius: 5px;
    padding: 6px;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    transition: opacity 0.3s;
  }

  .tooltip-container:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
  }

  .grid-container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 50px;
    margin: 30px 0;
  }

  .axis-labels-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 30px;
  }

  .grid-wrapper {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .y-axis-label {
    writing-mode: vertical-lr;
    transform: rotate(180deg);
    text-align: center;
    font-size: 0.9em;
    margin-right: 10px;
    color: #ccc;
  }

  .grid-and-x-label {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .x-axis-label {
    font-size: 0.9em;
    margin-top: 10px;
    color: #ccc;
  }

  .grid-xy {
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .grid-row {
    display: flex;
  }

  .grid-cell {
    width: 60px;
    height: 60px;
    border: 1px solid #555;
    background-color: #2f3136;
    cursor: pointer;
    box-sizing: border-box;
    transition: background-color 0.2s;
  }

  .grid-cell.selected {
    background-color: #0e7c86;
  }

  .z-slider-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-left: 30px;
  }

  .z-slider {
    writing-mode: vertical-lr;
    direction: rtl;
    width: 20px;
    height: 180px;
  }

  .position-output {
    text-align: center;
    font-size: 1.1em;
    margin-top: 10px;
    color: #ccc;
  }

  .grid-label {
    text-align: center;
    color: #aaa;
    margin-bottom: 8px;
  }

  .divider {
    border-top: 1px solid #555;
    margin: 25px 0;
  }

  #modalImage {
    display: block;
    margin: auto;
    max-width: 95vw;
    max-height: 90vh;
    object-fit: contain;
  }

  #imageModal .modal-content {
    background: linear-gradient(135deg, #1a1a1a, #333);
    border: 1px solid #444;
  }

  #modalImage.zoomable:hover {
    cursor: zoom-in;
  }

  #modalImage.zoomed {
    transform: scale(2);
    cursor: zoom-out;
    transition: transform 0.3s ease;
  }

  #imageModal .modal-dialog {
    margin: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    width: auto !important;
    max-width: 95vw;
    max-height: 95vh;
  }

  .btn-outline-primary,
  .btn-outline-info,
  .btn-outline-success,
  .btn-outline-danger {
    border-width: 2px;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .btn-outline-primary:hover {
    background-color: #0d6efd;
    color: white !important;
  }

  .btn-outline-info:hover {
    background-color: #0dcaf0;
    color: white !important;
  }

  .btn-outline-success:hover {
    background-color: #198754;
    color: white !important;
  }

  .btn-outline-danger:hover {
    background-color: #dc3545;
    color: white !important;
  }
</style>
<div id="pinput_shaping_tab" class="pinput-tab-container">
  <h4>ðŸ”§ Hardware Checks</h4>

  <!-- Hardware buttons -->
  <div class="d-flex flex-wrap justify-content-center text-center">
    <div class="tooltip-container">
      <button class="btn btn-outline-primary btn-modern" data-bind="click: runAccTest">
        <i class="fas fa-microchip"></i> Sensor Values
      </button>
      <div class="tooltiptext">Read values from accelerometer</div>
    </div>

    <div class="tooltip-container">
      <button class="btn btn-outline-info btn-modern" data-bind="click: function() { runAxisTest('X') }">
        <i class="fas fa-arrows-alt-h"></i> Test X Axis
      </button>
      <div class="tooltiptext">Sweep motion to test X axis</div>
    </div>

    <div class="tooltip-container">
      <button class="btn btn-outline-info btn-modern" data-bind="click: function() { runAxisTest('Y') }">
        <i class="fas fa-arrows-alt-v"></i> Test Y Axis
      </button>
      <div class="tooltiptext">Sweep motion to test Y axis</div>
    </div>

    <div class="tooltip-container">
      <button class="btn btn-outline-danger btn-modern" data-bind="click: emergencyStop">
        <i class="fas fa-exclamation-triangle"></i> Emergency Stop
      </button>
      <div class="tooltiptext">Immediately stop the printer</div>
    </div>
  </div>

  <!-- Alert -->
  <div class="mt-3">
    <div class="alert alert-info" data-bind="visible: summary, text: summary"></div>
  </div>

  <!-- Sensor Data Table -->
  <table class="table table-bordered table-dark mt-3" data-bind="visible: hasData">
    <thead>
      <tr>
        <th>Time</th>
        <th>X</th>
        <th>Y</th>
        <th>Z</th>
      </tr>
    </thead>
    <tbody data-bind="foreach: samples">
      <tr>
        <td data-bind="text: time"></td>
        <td data-bind="text: x"></td>
        <td data-bind="text: y"></td>
        <td data-bind="text: z"></td>
      </tr>
    </tbody>
  </table>

  <div class="divider"></div>
  <h4>ðŸŽ¯ Run Input Shaping Test</h4>

  <div class="grid-label mb-3 text-center">Select Start Position (XY) and Z Height</div>

  <div class="axis-labels-container">
    <div class="grid-wrapper">
      <div class="y-axis-label">
        Y (<span data-bind="text: sizeY"></span> mm)
      </div>

      <div class="grid-and-x-label">
        <div class="grid-xy" data-bind="foreach: gridRows().slice().reverse()">
          <div class="grid-row" data-bind="foreach: $data">
            <div class="grid-cell" data-bind="css: { selected: $root.selectedCell().row === row && $root.selectedCell().col === col }, click: function() { $root.selectedCell($data) }">
            </div>
          </div>
        </div>
        <div class="x-axis-label mt-2">
          â†’ X (<span data-bind="text: sizeX"></span> mm)
        </div>
      </div>
    </div>

    <div class="z-slider-container ms-5">
      <label for="zSlider" class="form-label">Z Height (mm)</label>
      <input type="range" class="z-slider" min="10" step="1" data-bind="attr: { max: sizeZ }, value: selectedZ" />
      <div class="position-output mt-2">
        Z: <span data-bind="text: selectedZ"></span> mm<br>(Max: <span data-bind="text: sizeZ"></span>)
      </div>
    </div>
  </div>

  <div class="position-output" data-bind="text: 'Start Position: ' + calculatedX() + ', ' + calculatedY() + ', ' + selectedZ() + ' mm'"></div>

  <!-- Resonance buttons -->
  <div class="d-flex flex-wrap justify-content-center text-center mt-3">
    <div class="tooltip-container">
      <button class="btn btn-outline-success btn-modern" data-bind="click: function() { runResonance('X') }">
        <i class="fas fa-wave-square"></i> Resonance X
      </button>
      <div class="tooltiptext">Run frequency test for X axis at selected position</div>
    </div>

    <div class="tooltip-container">
      <button class="btn btn-outline-success btn-modern" data-bind="click: function() { runResonance('Y') }">
        <i class="fas fa-wave-square"></i> Resonance Y
      </button>
      <div class="tooltiptext">Run frequency test for Y axis at selected position</div>
    </div>
  </div>
  <!-- Results Section -->
  <div class="divider" data-bind="visible: showResults"></div>
  <div class="mt-4" data-bind="visible: showResults">
    <h4>ðŸ“ˆ Results</h4>

    <!-- Summary Table -->
    <div class="table-responsive mt-4" data-bind="visible: showResults">
      <table class="table table-hover table-bordered align-middle">
        <thead class="table-dark text-center">
          <tr>
            <th>Shaper</th>
            <th>Vibration (PSD Area)</th>
            <th>Freq (Hz)</th>
            <th>Max Acceleration (mm/sÂ²)</th>
            <th>Recommended</th>
          </tr>
        </thead>
        <tbody data-bind="foreach: shaperResults">
          <tr>
            <td data-bind="attr: { title: $root.getShaperTooltip(name) }, text: name"></td>
            <td data-bind="text: vibration"></td>
            <td data-bind="text: base_freq"></td>
            <td data-bind="text: acceleration"></td>
            <td class="text-center">
              <span data-bind="visible: isBest">âœ…</span>
            </td>
          </tr>
        </tbody>
      </table>
    </div>

    <!-- G-code buttons -->
    <div class="card bg-dark text-white mt-4" data-bind="visible: showResults">
      <div class="card-body text-center">
        <h6 class="mb-3">Apply Recommended Settings</h6>

        <button class="btn btn-outline-info btn-modern me-2" data-bind="click: sendFreqGcode">
          <i class="fas fa-wave-square"></i> Set Frequency for <span data-bind="text: bestShaperAxis"></span>
        </button>

        <button class="btn btn-outline-warning btn-modern" data-bind="click: sendDampingGcode">
          <i class="fas fa-sliders-h"></i> Set Damping for <span data-bind="text: bestShaperAxis"></span>
        </button>
      </div>
    </div>


    <div class="text-center">
  <h6>Signal + Filtered</h6>
  <div id="plot_signal" style="height: 350px;"></div>
</div>

<div class="text-center mt-4">
  <h6>PSD + Shapers</h6>
  <div id="plot_psd" style="height: 450px;"></div>
</div>

    <!-- Signal Plot -->
    <div class="text-center mt-4">
      <h6>PNG Signal + Filter</h6>
      <img data-bind="attr: { src: signalImgUrl }, click: function() { openImageModal(signalImgUrl()) }"
           class="img-fluid rounded mb-2" style="max-height: 250px; cursor: zoom-in;" />
    </div>

    <!-- PSD Plot -->
    <div class="text-center mt-4">
      <h6>PNG PSD + Shapers</h6>
      <img data-bind="attr: { src: psdImgUrl }, click: function() { openImageModal(psdImgUrl()) }"
           class="img-fluid rounded mb-2" style="max-height: 250px; cursor: zoom-in;" />
    </div>
  </div>
</div>

<!-- Modal for enlarged image -->
<div id="imageModal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
    <div class="modal-content bg-dark text-white rounded-4 shadow-lg">
      <div class="modal-header" style="background: linear-gradient(135deg, #007bff, #6610f2); color: white;">
        <h5 class="modal-title">ðŸ“Š Full Size Preview</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body text-center">
        <img id="modalImage" src="" alt="Graph Preview"
             style="display: block; margin: auto; max-width: 100%; max-height: 90vh; object-fit: contain;" />
        <div class="mt-4">
          <a id="downloadImageLink" class="btn btn-outline-light btn-lg" download>
            <i class="fas fa-download"></i> Download Image
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
